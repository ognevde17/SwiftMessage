name: C++ Build & Tests

on:
  push:

  pull_request:
    branches: [ main, master ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    # ─────────────────────────────────────────────────────────
    #  PostgreSQL 16 как side-container
    # ─────────────────────────────────────────────────────────
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: swiftmessagedatabase
          POSTGRES_USER: swiftmessageadmin
          POSTGRES_PASSWORD: SwiftMessagePassword
        ports: [ '5432:5432' ]
        options: >-
          --health-cmd "pg_isready -U swiftmessageadmin -d swiftmessagedatabase"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    # ── 1. исходники ────────────────────────────────────────
    - name: Checkout sources
      uses: actions/checkout@v4

    # ── 2. системные зависимости ────────────────────────────
    - name: Install toolchain & libs
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          ninja-build cmake g++-12 clang \
          libboost-system-dev libboost-thread-dev libboost-serialization-dev \
          libpqxx-dev
        # делаем g++-12 компилятором «по умолчанию»
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 100
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 100

    # ── 3. Делаем скрипт исполняемым ───────────────────────
    - name: Make test-script executable
      run: chmod +x scripts/create_tests.sh
  
    # ── 4. Запуск интеграционного теста ─────────────────────
    - name: Build & Run integration tests
      env:
        PGHOST: localhost
        PGUSER: swiftmessageadmin
        PGPASSWORD: SwiftMessagePassword
        PGDATABASE: swiftmessagedatabase
      run: |
        scripts/create_tests.sh
        ./build-tests/integration_tests/SwiftMessage_Tests